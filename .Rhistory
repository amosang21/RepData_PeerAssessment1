r+s
class(r+s)
x<-c(17,14,4,5,13,12,10)
x[x>10]==4
x[x>10]
x[x>=11] <- 4
x
df <- read.csv("C:\Dropbox\Selegie\R\Coursera - R Programming\hw1_data.csv", header=TRUE)
df <- read.csv("C:\\Dropbox\\Selegie\\R\\Coursera - R Programming\\hw1_data.csv", header=TRUE)
df
df[1:2]
df[1:2,]
df[1,]
df[12,]
df[1,]
df[1,]
df[1:2,]
df[,]
df[-1,]
class(df)
df[max(df)
]
df[max(df)]
df[max(df),]
max(df)
df[-1,]
df[153,]
tail(df)
tail(df,2)
df[47,"Ozone"]
df[47,]
df[,]
df["NA","Ozone"]
df["Ozone"]
df["Ozone" = NA]
df["Ozone" = "NA"]
df["Ozone" == "NA"]
df["Ozone" == "NA",]
df["Ozone"]
df["Ozone"] == "NA"
table(df$Ozone)
table(df$Ozone=="NA")
table(df$Ozone)
df
df[is.na(df$Ozone)]
df[is.na(df$Ozone),]
is.na(df$Ozone)
count(df[is.na(df$Ozone),])
nrow(df[is.na(df$Ozone),])
df[is.na(df$Ozone),]
nrow(df[is.na(df$Ozone),])
df[!is.na(df$Ozone),]
df[!is.na(df$Ozone),"Ozone"]
mean(df[!is.na(df$Ozone),"Ozone"])
df
df$Month[]==5
df$Month
df[,]
df[,Month==5]
df[df$Month ==5]
df[df$Month.is(5)]
df[df$Month(5)]
df[df$Month=5]
df[df$Month==5]
df[df$Month>5]
df$Month
df[,df$Month>5]
df[,df$Month==5]
df[df$Month==5,]
df[df$Month==5,"Ozone"]
df[df$Month==5,]
max([df$Month==5,"Ozone"])
maximum([df$Month==5,"Ozone"])
maximum(df[df$Month==5,"Ozone"])
max(df[df$Month==5,"Ozone"])
df[df$Month==5,"Ozone"]
df
df[df$Month==5,"Ozone"]
df[!is.na(df$Month==5),"Ozone"]
df[df$Month==5, !is.na("Ozone")]
df[df$Month==5,]
df[df$Month==5,"Ozone"]
!is.na(df[df$Month==5,"Ozone"])
df[df$Month==5,"Ozone"]
help
help(max)
df[df$Month==5,"Ozone"]
max(df[df$Month==5,"Ozone"])
max(df[df$Month==5,"Ozone"], na.rm=TRUE)
cls
clr
clear
clr()
cls()
max(df[df$Month==5,"Ozone"])
df[df$Month==5,"Ozone"]
max(df[df$Month==5,"Ozone"], na.rm=TRUE)
df[df$Month==6,"Temp"]
mean(df[df$Month==6,"Temp"])
df[df$Ozone>31 && df$Temp>90,]
df[df$Ozone>31,]
subset(df, Ozone>31)
subset(df, Ozone>31 & Temp >90)
subset(df, Ozone>31 && Temp >90)
subset(df, Ozone>31 & Temp >90)
df[df$Ozone>31 & df$Temp>90,]
subset(df, Ozone>31 & Temp >90)
subset(df, Ozone>31 & Temp >90, select=c"Solar.R")
subset(df, Ozone>31 & Temp >90, select=c(Solar.R))
mean(subset(df, Ozone>31 & Temp >90, select=c(Solar.R)))
input<-subset(df, Ozone>31 & Temp >90, select=c(Solar.R))
class(input)
mean(subset(df, Ozone>31 & Temp >90, select=c(Solar.R))$Solar.R)
library(swirl)
swirl
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
y_sqrt
my_sqrt
my_div
my_div <- z/2
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
quit
info()
bye()
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each=10)
num-vect<-c(0.5,55,-10
)
num-vect<-c(0.5,55,-10)
num_vect<-c(0.5,55,-10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect < 1
tf
num_vect >=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<0c(my_char, "your_name_here")
my_name<-c(my_char, "your_name_here")
my_name
paste(my_char, collapse=" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
nxt()
help()
info()
num_vect<-c(0.5, 55, -10,6)
tf<-num_vect < 1
tf
num_vect >= 6
my_char<-c("My", "name","is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char, "your_name_here")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"),sep = "")
v
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z),
| 100)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_nais.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
play()
x[3,5,7]
x[c(3,5,7)]
nxt()
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect)<-c("foo", "bar", "norf")
names(vect2)<-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(data=c(1:20), nrow=5, ncol=5)
my_matrix2<-matrix(data=1:20, nrow=5, ncol=5)
my_matrix2<-matrix(data=1:20, nrow=4, ncol=5)
identical(matrix, matrix2)
identical(my_matrix, my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, mydata)
info()
help
colnames(my_data) <- cnames
my_data
source("pollutantmean.R")
source("C:\Dropbox\Selegie\R\Coursera - R Programming\Asg1\pollutantmean.R")
source("C:\\Dropbox\Selegie\R\\Coursera - R Programming\\Asg1\\pollutantmean.R")
source("C:\\Dropbox\\Selegie\\R\\Coursera - R Programming\\Asg1\\pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
x <-
8
rm
?rm
5
print(df)
x<-1:16
x
dim(x) <- c(4,4)
x
ls()
rm(list=ls())
ls()
galton
install.packages(c("mgcv", "UsingR"))
attributes(x)
x<_1
x<-1
attributes(x)
dim(x) <- c(3,3)
x<-c(1, "a", T)
x
x<-list(1, "a", T)
x
x<-rnorm(100)
x
library("Quandl")
install.packages("quandl")
install.packages("Quandl")
library(Quandl)
install.packages(randomForest)
install.packages('randomForest')
install.packages(c('rattle','rpart.plot'))
install.packages(c('RColorBrewer','party'))
search()
package_version
packageStatus()
packageName()
package_version()
packageDescription()
packageDescription('party')
library("RColorBrewer", lib.loc="C:/Program Files/R/R-3.1.1/library")
detach("package:RColorBrewer", unload=TRUE)
a<-available.packages()
View(a)
summary (a$Repository)
a$Repository
a["Repository"]
a("Repository")
a(1)
class(x)
class(a)
nrow(a)
attribute(a)
attributes(a)
a$Repository
a[,"Repository"]
class(a[,"Repository"])
summary(a[,"Repository"])
table(a[,"Repository"])
rownames(a)
head(rownames(a), 10)
nrow(a)
install.packages(c("slidify","ggplot2","devtools"))
search()
find.package
find.packages()
find.package()
library(datasets)
airquality
iris
detach("package:datasets", unload=TRUE)
find.package("devtools")
find.package()
find.package(*)
find.package(verbose = T)
install.packages(KernSmooth)
install.packages("KernSmooth")
find.package("KernSmooth")
str("KernSmooth")
installed.packages()
installed.packages("KernSmooth")
available.packages("KernSmooth")
library(KernSmooth)
library(devtools)
find_rtools
find_rtools()
.Platform
.Platform$OS
citation()
licence()
qnorm(0.8)
pnorm(0.8)
pnorm(1)
qnorm(0.9)
qnorm(0.9) * 18 / 4
(qnorm(0.9) * 18 / 4) ^ 2
qnorm(0.975)
(qnorm(0.975) * 0.02) / (1028) ^ 0.5
(1028) ^ 0.5
qnorm(0.975) / (1028) ^ 0.5
(qnorm(0.975) / (1028) ^ 0.5) * 0.02
qnorm(0.975)
qnorm(0.9)
qnorm(0.5)
0.5 ^ 8
0.5 ^ 810
0.5 ^ 10
str(knit)
matplot
?matplot
str(matplot)
rbinom(4601, size= 1,0.5)
rbinom(10, size = 1, 0.5)
?rbinom
rbinom(10, size = 2, 0.5)
rbinom(10, size = 0, 0.5)
rbinom(10, size = 5, 0.5)
hist(rbinom(10000, size = 5, 0.5))
hist(rbinom(10000, size = 5, 0.5))
hist(rbinom(10000, size = 3, 0.5))
hist(rbinom(10000, size = 1, 0.5))
hist(rbinom(10000, size = 3, 0.25))
hist(rbinom(10000, size = 3, 0.25))
?rbinom
hist(rbinom(10000, size = 1, 0.25))
hist(rbinom(10000, size = 1, 0.5))
hist(rbinom(10000, size = 1, 0.3))
hist(rbinom(10000, size = 1, 0.9))
setwd("C:/Dropbox/Selegie/Coursera - Data Science Specialization/05 Reproducible Research/Peer Asgn 1/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
summary(df_merge)
summary(df_agg_date$steps)
summary(df_merge_agg_date$steps)
df_merge_agg_date <- aggregate(steps ~ date, data = df_merge, FUN = sum)
View(df_merge_agg_date)
summary(df_merge_agg_date$steps)
plot(df_merge_agg_date$steps)
boxplot(df_merge_agg_date$steps)
boxplot(df_merge_agg_date$steps, df_agg_date$steps)
summary(df_merge_agg_date$steps)
mean(df_merge_agg_date$steps)
median(df_merge_agg_date$steps)
mean(df_agg_date$steps)
median(df_agg_date$steps)
df_merge$day <- as.factor(NA)
View(df_merge_agg_date)
View(df_merge)
class(df_merge$day )
levels(df_merge$day )
levels(df_merge$day)
levels(df_merge$day) <- c("1")
levels(df_merge$day)
levels(df_merge$day) <- c("weekday", "weekend")
levels(df_merge$day)
class(df_merge$day )
df_merge$day <- factor(c("weekday", "weekend"))
class(df_merge$day)
levels(df_merge$day)
View(df_merge)
df_merge$day <- factor(NA, levels = c("weekday", "weekend"))
View(df_merge)
levels(df_merge$day)
View(df_merge)
df_merge[1,"date"]
class(df_merge[1,"date"])
as.Date((df_merge[1,"date"]))
class(as.Date((df_merge[1,"date"])))
weekday(as.Date((df_merge[1,"date"])))
weekdays(as.Date((df_merge[1,"date"])))
weekdays(as.Date((df_merge[,"date"])))
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
View(df_merge)
?gsub
View(df_merge)
grep("Friday", df_merge$day)
grep("Monday|Tuesday", df_merge$day)
grep("Monday|Tuesday|Wednesday", df_merge$day)
grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)
dfmerge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day) <- "weekday"
)
dfmerge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
View(df_merge)
df_merge$day <- factor(NA, levels = c("weekday", "weekend"))
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
View(df_merge)
df_merge$day[grep("Saturday|Sunday", df_merge$day)] <- "weekend"
summary(df_merge$day)
unique(df_merge$day)
df_merge$day <- factor(weekdays(as.Date((df_merge[,"date"]))))
levels(df_merge$day)
df_merge$day <- factor(weekdays(as.Date((df_merge[,"date"]))))
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
df_merge$day[grep("Saturday|Sunday", df_merge$day)] <- "weekend"
)
df_merge$day <- factor(weekdays(as.Date((df_merge[,"date"]))))
View(df_merge)
grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)]
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
df_merge$day <- factor(weekdays(as.Date((df_merge[,"date"]))))
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- factor("weekday")
levels(df_merge$day)
levels(df_merge$day) <- c("weekday", "weekend")
levels(df_merge$day) <- paste(levels(df_merge$day), c("weekday", "weekend"))
levels(df_merge$day)
levels(df_merge$day) <- c(levels(df_merge$day), "weekday", "weekend")
levels(df_merge$day)
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- factor("weekday")
df_merge$day[grep("Saturday|Sunday", df_merge$day)] <- "weekend"
df_merge$day <- factor(df_merge$day)
View(df_merge)
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- factor("weekday")
View(df_merge)
df_merge$day <- weekdays(as.Date((df_merge[,"date"])))
View(df_merge)
df_merge$day[grep("Monday|Tuesday|Wednesday|Thursday|Friday", df_merge$day)] <- "weekday"
df_merge$day[grep("Saturday|Sunday", df_merge$day)] <- "weekend"
df_merge$day <- factor(df_merge$day)
View(df_merge)
levels(df_merge$day)
df_agg_intervalday <- aggregate(steps ~ interval+day, data = df_merge, FUN = mean, na.action = na.omit)
df_agg_intervalday
View(df_agg_intervalday)
df_agg_interval_day <- aggregate(steps ~ interval+day, data = df_merge, FUN = mean)
library(ggplot)
library(ggplot2)
View(df_agg_intervalday)
qplot(x = interval, y = steps, data = df_agg_interval_day)
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line")
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", facet = day)
?qplot
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", color = day)
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", color = day, lab = "Interval ID", ylab = "Average Number of Steps Per Interval")
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", color = day, xlab = "Interval ID", ylab = "Average Number of Steps Per Interval")
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", size = day, xlab = "Interval ID", ylab = "Average Number of Steps Per Interval")
qplot(x = interval, y = steps, data = df_agg_interval_day, geom = "line", color = day, xlab = "Interval ID", ylab = "Average Number of Steps Per Interval")
